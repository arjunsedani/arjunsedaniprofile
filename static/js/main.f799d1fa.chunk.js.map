{"version":3,"sources":["assets/topphoto.png","assets/arjunpic.jpg","style/styleSettings.js","screens/Welcome.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","unSortedColors","BLUE","DARK_GREY","MID_GREY","LIGHT_GREY","LIGHTEST_GREY","RED","ERROR_RED","GREEN","YELLOW","LIGHT_BLUE","WHITE","GREEN_DARK","GREEN_REST","CANDY_RED","ORANGE","BLACK","PRIMARY_CTA","SECONDARY","TERTIARY","HOST_BLUE","PRIMARY_LINKS","PRIMARY_DARK_TEXT","PRIMARY_GREY_TEXT","DISABLED_GREY","BACKGROUND_GREY","LINE_GREY","NEGATIVE_TEXT","NOTIFICATION_RED","WALLMART_BLUE","HPS_BLUE","HPS_TEAL","colors","Object","keys","sort","reduce","acc","key","fonts","PRIMARY","join","CODE","CONFIG","useStyles","makeStyles","theme","root","background","backgroundImage","topphoto","minHeight","backgroundColor","backgroundPosition","button","minWidth","aboutMe","height","width","textAlign","position","border","nameTitle","marginLeft","marginTop","nameTitle2","typography1","color","palette","whitish","main","whiteColor","Welcome","props","classes","className","style","display","src","alt","Grid","alignItems","direction","container","justify","item","Typography","align","variant","marked","Button","onClick","window","scrollTo","top","behavior","Box","m","spacing","borderRadius","arjunpic","Container","maxWidth","App","primary","secondary","tertiary","success","error","hpsBlue","selectedgray","primaryColor","linksColor","darkTextColor","createMuiTheme","selectedGray","action","typography","fontFamily","htmlFontSize","fontSize","body1","overrides","MuiCssBaseline","secondaryTextColor","iconColor","fontColor","ThemeProvider","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f799d1fa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/topphoto.5bbc11d7.png\";","module.exports = __webpack_public_path__ + \"static/media/arjunpic.cf476cc0.jpg\";","/**\n * @file\n * @author Arjun Sedani <ArjunBhavesh.Sedani@in.bosch.com>\n * 09/18/2019\n */\nconst unSortedColors = {\n  BLUE: \"#364959\",\n  DARK_GREY: \"#2D323C\",\n  MID_GREY: \"#828793\",\n  LIGHT_GREY: \"#EAEDF4\",\n  LIGHTEST_GREY: \"#FDFEFF\",\n  RED: \"#CB2431\",\n  ERROR_RED: \"#FF4623\",\n  GREEN: \"#2CBE4E\",\n  YELLOW: \"#DBAB09\",\n  LIGHT_BLUE: \"#7fc6ff\",\n  WHITE: \"#ffffff\",\n  GREEN_DARK: \"#003300\",\n  GREEN_REST: \"#1b5e20\",\n  CANDY_RED: \"#ff0800\",\n  ORANGE: \"#E3AA91\",\n  BLACK: \"#000000\",\n  PRIMARY_CTA: \"#29ccc4\",\n  SECONDARY: \"#6f7682\",\n  TERTIARY: \"#d9d9d9\",\n  HOST_BLUE: \"#29ccc4\",\n  PRIMARY_LINKS: \"#577a80\",\n  PRIMARY_DARK_TEXT: \"#002124\",\n  PRIMARY_GREY_TEXT: \"#6F7682\",\n  DISABLED_GREY: \"#aab1b3\",\n  BACKGROUND_GREY: \"#f7f7f7\",\n  LINE_GREY: \"#d9d9d9\",\n  NEGATIVE_TEXT: \"#d44204\",\n  NOTIFICATION_RED: \"#ed0235\",\n  WALLMART_BLUE: \"#0072CE\",\n  HPS_BLUE: \"#101068\",\n  HPS_TEAL: \"#3da98b\"\n};\n\nexport const colors = Object.keys(unSortedColors)\n  .sort()\n  .reduce(\n    (acc, key) => ({\n      ...acc,\n      [key]: unSortedColors[key]\n    }),\n    {}\n  );\n\nexport const fonts = {\n  // PRIMARY: [\n  //   \"Avenir Next\",\n  //   \"-apple-system\",\n  //   \"BlinkMacSystemFont\",\n  //   '\"Segoe UI\"',\n  //   \"Roboto\",\n  //   '\"Helvetica Neue\"',\n  //   \"Arial\",\n  //   \"sans-serif\",\n  //   '\"Apple Color Emoji\"',\n  //   '\"Segoe UI Emoji\"',\n  //   '\"Segoe UI Symbol\"'\n  // ].join(),\n  //starbucks\n  PRIMARY: [\n    \"SoDoSans\",\n    \"Helvetica Neue\",\n    \"Helvetica\",\n    \"Arial\",\n    \"sans-serif\"\n  ].join(),\n  CODE: [\"Menlo\", \"Consolas\", \"Monaco\"].join(),\n  CONFIG: \"ConfigurationPrimaryFont\"\n};\n\nexport const fontSizes = {\n  BASE: \"14px\",\n  MEDIUM: \"16px\",\n  LARGE: \"20px\"\n};\n\nexport const spacing = {\n  BASE: \"30px\",\n  SMALL: \"10px\",\n  LARGE: \"70px\",\n  EXTRA_LARGE: \"100px\"\n};\n\nexport const tabStyles = {\n  tabs: {\n    width: \"100%\",\n    display: \"inline-block\",\n    marginRight: \"30px\",\n    verticalAlign: \"top\"\n  },\n  links: {\n    margin: 0,\n    padding: 0\n  },\n  tabLink: {\n    height: \"30px\",\n    lineHeight: \"30px\",\n    padding: \"0 15px\",\n    cursor: \"pointer\",\n    fontWeight: \"bold\",\n    borderBottom: \"2px solid transparent\",\n    display: \"inline-block\"\n  },\n  activeLinkStyle: {\n    borderBottom: \"2px solid #0082E6\"\n  },\n  visibleTabStyle: {\n    flex: 1\n  },\n  content: {\n    padding: \"0 15px\"\n  }\n};\n\nexport const columnWidth = {\n  BASE: \"10%\",\n  SMALL: \"15%\",\n  MEDIUM: \"30%\",\n  LARGE: \"50%\"\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Typography, Grid, Box, Container } from \"@material-ui/core\";\nimport { makeStyles, withStyles } from \"@material-ui/styles\";\nimport topphoto from \"../assets/topphoto.png\";\nimport arjunpic from \"../assets/arjunpic.jpg\";\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  background: {\n    backgroundImage: `url(${topphoto})`,\n    minHeight: 400,\n    backgroundColor: \"#152238\", // Average color of the background image.\n    backgroundPosition: \"center\"\n  },\n  button: {\n    minWidth: 200\n  },\n  aboutMe: {\n    height: 4,\n    width: 70,\n    textAlign: \"center\",\n    position: \"relative\",\n    background: \"#7bc3d1\",\n    border: 0\n  },\n  nameTitle: {\n    marginLeft: 109,\n    marginTop: 112\n  },\n  nameTitle2: {\n    marginLeft: 109,\n    marginTop: 20\n  },\n  typography1: {\n    color: theme.palette.whitish.main\n  },\n  whiteColor: {\n    color: theme.palette.whitish.main\n  }\n}));\n\nfunction Welcome(props) {\n  const classes = useStyles();\n\n  const handleScrollToStats = () => {\n    window.scrollTo({\n      top: 300,\n      behavior: \"smooth\"\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <div className={classes.background}>\n        <img\n          style={{ display: \"none\" }}\n          src={topphoto}\n          alt=\"increase priority\"\n        />\n        <Grid\n          alignItems=\"flex-start\"\n          direction=\"column\"\n          container\n          justify=\"flex-start\"\n        >\n          <Grid item className={classes.nameTitle}>\n            <Typography\n              className={classes.typography1}\n              align=\"center\"\n              variant=\"h2\"\n              marked=\"center\"\n            >\n              Hello, I'm Arjun Sedani\n            </Typography>\n          </Grid>\n          <Grid item className={classes.nameTitle2}>\n            <Typography\n              color=\"inherit\"\n              align=\"center\"\n              variant=\"h5\"\n              className={classes.typography1}\n            >\n              React Developer | React Developer | UX Developer\n            </Typography>\n          </Grid>\n          <Grid item className={classes.nameTitle2}>\n            <Button\n              variant=\"outlined\"\n              color=\"secondary\"\n              onClick={() => handleScrollToStats()}\n            >\n              Learn More\n            </Button>\n          </Grid>\n        </Grid>\n      </div>\n      <Box m=\"4rem\" />\n      <Grid\n        alignItems=\"center\"\n        direction=\"column\"\n        container\n        justify=\"center\"\n        spacing={2}\n      >\n        <Grid item>\n          <Typography align=\"center\" variant=\"h6\" marked=\"center\">\n            About Me\n          </Typography>\n          <hr className={classes.aboutMe} />\n        </Grid>\n        <Grid item>\n          <img\n            style={{ borderRadius: 100, width: 200, height: 200 }}\n            src={arjunpic}\n            alt=\"increase priority\"\n          />\n        </Grid>\n      </Grid>\n      <Box m=\"4rem\" />\n      <Grid\n        alignItems=\"center\"\n        direction=\"column\"\n        container\n        justify=\"center\"\n        spacing={2}\n      >\n        <Grid item>\n          <Container maxWidth=\"md\">\n            <Typography align=\"flex-start\" variant=\"body2\" marked=\"flex-start\">\n              <li>\n                Full stack developer with 3 years 2 months of experience in\n                development on React Native,ReactJS, HTM5, CSS, Javascript,\n                NodeJS, NoSQL and various other technologies\n              </li>\n              <li>\n                Presently associated with Robert Bosch Engineering and Business\n                Solutions Private Limited. as Senior Software Engineer since\n                August 2019\n              </li>\n              <li>\n                Previously associated with EVRY India Pvt. Ltd. as Software\n                Engineer from October 2016 -August 2019\n              </li>\n              <li>\n                Effective Individual contributor and Team Player Scrum\n                Fundamentals certified in end-to-end SDLC Process (Requirement\n                analysis, System Study, Designing, Coding, Testing, Deployment\n                and Implementation)\n              </li>\n              <li>\n                Understand technical concepts and quick in converting them into\n                meaningful results.\n              </li>\n              <li>\n                Exposure to DevOps tools like JIRA, GitHub, Bitbucket, Jenkins\n                and Cli..\n              </li>\n            </Typography>\n          </Container>\n        </Grid>\n      </Grid>\n\n      <Box m=\"4rem\" />\n      <Grid\n        alignItems=\"center\"\n        direction=\"column\"\n        container\n        justify=\"center\"\n        spacing={2}\n      >\n        <Grid item>\n          <Typography align=\"center\" variant=\"h6\" marked=\"center\">\n            Achievements\n          </Typography>\n          <hr className={classes.aboutMe} />\n        </Grid>\n      </Grid>\n      <Grid\n        alignItems=\"center\"\n        direction=\"column\"\n        container\n        justify=\"center\"\n        spacing={2}\n      >\n        <Grid item>\n          <Container maxWidth=\"md\">\n            <Typography align=\"flex-start\" variant=\"body2\" marked=\"flex-start\">\n              <li>\n                Secured place among the top 11 innovations at \"Microsoft\n                Incubate Hackathon 2019\" for the idea \"3d House Hunting using\n                Map My India\"\n              </li>\n              <li>\n                Honored as Employee of the Month award for the month of March\n                2018 for development of chat-bot android application using\n                Amazon Lex within a short duration from the Employer (EVRY India\n                Pvt. Ltd.)\n              </li>\n              <li>\n                Honored for \"PropertyGram\" as among the top 10 innovations at\n                \"TECHUTSAV 2019\" EVRY's annual technical innovation expo and\n                client meet\n              </li>\n              <li>\n                Honored for \"Smart Real Estate\" as the best innovation at\n                \"TECHUTSAV 2018\", EVRY's annual technical innovation expo and\n                client meet\n              </li>\n              <li>\n                Honored \"3-30-300 rule of facility management business\"as one of\n                the best ideas at Evry's hackathon 2018\n              </li>\n            </Typography>\n          </Container>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Welcome;\n","import React from \"react\";\nimport { createMuiTheme } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { fonts } from \"./style/styleSettings\";\nimport { colors } from \"./style/styleSettings\";\nimport Welcome from \"./screens/Welcome\";\nconst App = () => {\n  const {\n    primary: primaryColor,\n    secondary,\n    whitish,\n    tertiary,\n    hpsBlue,\n    error,\n    selectedgray\n  } = {\n    primary: colors.WALLMART_BLUE,\n    whitish: colors.WHITE,\n    // primary: colors.HOST_BLUE,\n    secondary: colors.WHITE,\n    tertiary: colors.TERTIARY,\n    success: colors.GREEN_REST,\n    error: colors.ERROR_RED,\n    hpsBlue: colors.HPS_BLUE,\n    selectedgray: colors.BACKGROUND_GREY\n  };\n  const linksColor = colors.PRIMARY_LINKS;\n\n  const darkTextColor = colors.PRIMARY_DARK_TEXT;\n\n  const theme = createMuiTheme({\n    palette: {\n      primary: { main: primaryColor },\n      whitish: { main: whitish},\n      secondary: { main: secondary },\n      tertiary: { main: tertiary },\n      error: { main: error },\n      selectedGray: { main: selectedgray },\n      action: { main: colors.PRIMARY_GREY_TEXT }\n    },\n    typography: {\n      fontFamily: `${fonts.PRIMARY}`,\n      htmlFontSize: 14,\n      fontSize: 14,\n      body1: { fontSize: 14 }\n    },\n    overrides: {\n      MuiCssBaseline: {\n        \"@global\": {\n          \"@font-face\": `${fonts.PRIMARY}`\n        }\n      }\n    },\n    primaryColor,\n    hpsBlue,\n    secondaryTextColor: linksColor,\n    iconColor: primaryColor,\n    fontColor: darkTextColor\n  });\n  return (\n    <ThemeProvider theme={theme}>\n     <Welcome/>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}